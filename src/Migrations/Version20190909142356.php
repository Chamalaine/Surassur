<?php

declare(strict_types=1);

namespace DoctrineMigrations;

use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;

/**
 * Auto-generated Migration: Please modify to your needs!
 */
final class Version20190909142356 extends AbstractMigration
{
    public function getDescription() : string
    {
        return '';
    }

    public function up(Schema $schema) : void
    {
        // this up() migration is auto-generated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('DROP TABLE batch');
        $this->addSql('DROP TABLE block_content');
        $this->addSql('DROP TABLE block_content__body');
        $this->addSql('DROP TABLE block_content_field_data');
        $this->addSql('DROP TABLE block_content_field_revision');
        $this->addSql('DROP TABLE block_content_revision');
        $this->addSql('DROP TABLE block_content_revision__body');
        $this->addSql('DROP TABLE cache_bootstrap');
        $this->addSql('DROP TABLE cache_config');
        $this->addSql('DROP TABLE cache_container');
        $this->addSql('DROP TABLE cache_data');
        $this->addSql('DROP TABLE cache_default');
        $this->addSql('DROP TABLE cache_discovery');
        $this->addSql('DROP TABLE cache_entity');
        $this->addSql('DROP TABLE cache_menu');
        $this->addSql('DROP TABLE cache_render');
        $this->addSql('DROP TABLE cachetags');
        $this->addSql('DROP TABLE comment');
        $this->addSql('DROP TABLE comment__comment_body');
        $this->addSql('DROP TABLE comment_entity_statistics');
        $this->addSql('DROP TABLE comment_field_data');
        $this->addSql('DROP TABLE config');
        $this->addSql('DROP TABLE file_managed');
        $this->addSql('DROP TABLE file_usage');
        $this->addSql('DROP TABLE history');
        $this->addSql('DROP TABLE key_value');
        $this->addSql('DROP TABLE key_value_expire');
        $this->addSql('DROP TABLE locale_file');
        $this->addSql('DROP TABLE locales_location');
        $this->addSql('DROP TABLE locales_source');
        $this->addSql('DROP TABLE locales_target');
        $this->addSql('DROP TABLE menu_link_content');
        $this->addSql('DROP TABLE menu_link_content_data');
        $this->addSql('DROP TABLE menu_link_content_field_revision');
        $this->addSql('DROP TABLE menu_link_content_revision');
        $this->addSql('DROP TABLE menu_tree');
        $this->addSql('DROP TABLE node');
        $this->addSql('DROP TABLE node__body');
        $this->addSql('DROP TABLE node__comment');
        $this->addSql('DROP TABLE node__field_image');
        $this->addSql('DROP TABLE node__field_tags');
        $this->addSql('DROP TABLE node_access');
        $this->addSql('DROP TABLE node_field_data');
        $this->addSql('DROP TABLE node_field_revision');
        $this->addSql('DROP TABLE node_revision');
        $this->addSql('DROP TABLE node_revision__body');
        $this->addSql('DROP TABLE node_revision__comment');
        $this->addSql('DROP TABLE node_revision__field_image');
        $this->addSql('DROP TABLE node_revision__field_tags');
        $this->addSql('DROP TABLE queue');
        $this->addSql('DROP TABLE router');
        $this->addSql('DROP TABLE search_dataset');
        $this->addSql('DROP TABLE search_index');
        $this->addSql('DROP TABLE search_total');
        $this->addSql('DROP TABLE semaphore');
        $this->addSql('DROP TABLE sequences');
        $this->addSql('DROP TABLE sessions');
        $this->addSql('DROP TABLE shortcut');
        $this->addSql('DROP TABLE shortcut_field_data');
        $this->addSql('DROP TABLE shortcut_set_users');
        $this->addSql('DROP TABLE taxonomy_index');
        $this->addSql('DROP TABLE taxonomy_term__parent');
        $this->addSql('DROP TABLE taxonomy_term_data');
        $this->addSql('DROP TABLE taxonomy_term_field_data');
        $this->addSql('DROP TABLE taxonomy_term_field_revision');
        $this->addSql('DROP TABLE taxonomy_term_revision');
        $this->addSql('DROP TABLE taxonomy_term_revision__parent');
        $this->addSql('DROP TABLE url_alias');
        $this->addSql('DROP TABLE user__roles');
        $this->addSql('DROP TABLE user__user_picture');
        $this->addSql('DROP TABLE users');
        $this->addSql('DROP TABLE users_data');
        $this->addSql('DROP TABLE users_field_data');
        $this->addSql('DROP TABLE watchdog');
        $this->addSql('ALTER TABLE intermediaire ADD last_login DATETIME NOT NULL');
    }

    public function down(Schema $schema) : void
    {
        // this down() migration is auto-generated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');

        $this->addSql('CREATE TABLE batch (bid INT UNSIGNED NOT NULL COMMENT \'Primary Key: Unique batch ID.\', token VARCHAR(64) NOT NULL COLLATE ascii_general_ci COMMENT \'A string token generated against the current user\'\'s session id and the batch id, used to ensure that only the user who submitted the batch can effectively access it.\', timestamp INT NOT NULL COMMENT \'A Unix timestamp indicating when this batch was submitted for processing. Stale batches are purged at cron time.\', batch LONGBLOB DEFAULT NULL COMMENT \'A serialized array containing the processing data for the batch.\', INDEX token (token), PRIMARY KEY(bid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Stores details about batches (processes that run inâ€¦\' ');
        $this->addSql('CREATE TABLE block_content (id INT UNSIGNED AUTO_INCREMENT NOT NULL, revision_id INT UNSIGNED DEFAULT NULL, type VARCHAR(32) NOT NULL COLLATE ascii_general_ci COMMENT \'The ID of the target entity.\', uuid VARCHAR(128) NOT NULL COLLATE ascii_general_ci, langcode VARCHAR(12) NOT NULL COLLATE ascii_general_ci, UNIQUE INDEX block_content__revision_id (revision_id), INDEX block_content_field__type__target_id (type), UNIQUE INDEX block_content_field__uuid__value (uuid), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'The base table for block_content entities.\' ');
        $this->addSql('CREATE TABLE block_content__body (deleted TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'A boolean indicating whether this data item has been deleted\', entity_id INT UNSIGNED NOT NULL COMMENT \'The entity id this data is attached to\', langcode VARCHAR(32) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The language code for this data item.\', delta INT UNSIGNED NOT NULL COMMENT \'The sequence number for this data item, used for multi-value fields\', bundle VARCHAR(128) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The field instance bundle to which this row belongs, used when deleting a field instance\', revision_id INT UNSIGNED NOT NULL COMMENT \'The entity revision id this data is attached to\', body_value LONGTEXT NOT NULL COLLATE utf8mb4_general_ci, body_summary LONGTEXT DEFAULT NULL COLLATE utf8mb4_general_ci, body_format VARCHAR(255) DEFAULT NULL COLLATE ascii_general_ci, INDEX bundle (bundle), INDEX body_format (body_format), INDEX revision_id (revision_id), PRIMARY KEY(entity_id, deleted, delta, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Data storage for block_content field body.\' ');
        $this->addSql('CREATE TABLE block_content_field_data (id INT UNSIGNED NOT NULL, langcode VARCHAR(12) NOT NULL COLLATE ascii_general_ci, revision_id INT UNSIGNED NOT NULL, type VARCHAR(32) NOT NULL COLLATE ascii_general_ci COMMENT \'The ID of the target entity.\', status TINYINT(1) NOT NULL, info VARCHAR(255) DEFAULT NULL COLLATE utf8mb4_general_ci, changed INT DEFAULT NULL, reusable TINYINT(1) DEFAULT NULL, default_langcode TINYINT(1) NOT NULL, revision_translation_affected TINYINT(1) DEFAULT NULL, INDEX block_content_field__type__target_id (type), INDEX block_content__id__default_langcode__langcode (id, default_langcode, langcode), INDEX block_content__revision_id (revision_id), INDEX block_content__status_type (status, type, id), PRIMARY KEY(id, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'The data table for block_content entities.\' ');
        $this->addSql('CREATE TABLE block_content_field_revision (revision_id INT UNSIGNED NOT NULL, langcode VARCHAR(12) NOT NULL COLLATE ascii_general_ci, id INT UNSIGNED NOT NULL, status TINYINT(1) NOT NULL, info VARCHAR(255) DEFAULT NULL COLLATE utf8mb4_general_ci, changed INT DEFAULT NULL, default_langcode TINYINT(1) NOT NULL, revision_translation_affected TINYINT(1) DEFAULT NULL, INDEX block_content__id__default_langcode__langcode (id, default_langcode, langcode), PRIMARY KEY(revision_id, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'The revision data table for block_content entities.\' ');
        $this->addSql('CREATE TABLE block_content_revision (revision_id INT UNSIGNED AUTO_INCREMENT NOT NULL, id INT UNSIGNED NOT NULL, langcode VARCHAR(12) NOT NULL COLLATE ascii_general_ci, revision_user INT UNSIGNED DEFAULT NULL COMMENT \'The ID of the target entity.\', revision_created INT DEFAULT NULL, revision_log LONGTEXT DEFAULT NULL COLLATE utf8mb4_general_ci, revision_default TINYINT(1) DEFAULT NULL, INDEX block_content_field__revision_user__target_id (revision_user), INDEX block_content__id (id), PRIMARY KEY(revision_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'The revision table for block_content entities.\' ');
        $this->addSql('CREATE TABLE block_content_revision__body (deleted TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'A boolean indicating whether this data item has been deleted\', entity_id INT UNSIGNED NOT NULL COMMENT \'The entity id this data is attached to\', revision_id INT UNSIGNED NOT NULL COMMENT \'The entity revision id this data is attached to\', langcode VARCHAR(32) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The language code for this data item.\', delta INT UNSIGNED NOT NULL COMMENT \'The sequence number for this data item, used for multi-value fields\', bundle VARCHAR(128) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The field instance bundle to which this row belongs, used when deleting a field instance\', body_value LONGTEXT NOT NULL COLLATE utf8mb4_general_ci, body_summary LONGTEXT DEFAULT NULL COLLATE utf8mb4_general_ci, body_format VARCHAR(255) DEFAULT NULL COLLATE ascii_general_ci, INDEX revision_id (revision_id), INDEX bundle (bundle), INDEX body_format (body_format), PRIMARY KEY(entity_id, revision_id, deleted, delta, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Revision archive storage for block_content field body.\' ');
        $this->addSql('CREATE TABLE cache_bootstrap (cid VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE ascii_bin COMMENT \'Primary Key: Unique cache ID.\', data LONGBLOB DEFAULT NULL COMMENT \'A collection of data to cache.\', expire INT DEFAULT 0 NOT NULL COMMENT \'A Unix timestamp indicating when the cache entry should expire, or -1 for never.\', created NUMERIC(14, 3) DEFAULT \'0.000\' NOT NULL COMMENT \'A timestamp with millisecond precision indicating when the cache entry was created.\', serialized SMALLINT DEFAULT 0 NOT NULL COMMENT \'A flag to indicate whether content is serialized (1) or not (0).\', tags LONGTEXT DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'Space-separated list of cache tags for this entry.\', checksum VARCHAR(255) NOT NULL COLLATE ascii_general_ci COMMENT \'The tag invalidation checksum when this entry was saved.\', INDEX created (created), INDEX expire (expire), PRIMARY KEY(cid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Storage for the cache API.\' ');
        $this->addSql('CREATE TABLE cache_config (cid VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE ascii_bin COMMENT \'Primary Key: Unique cache ID.\', data LONGBLOB DEFAULT NULL COMMENT \'A collection of data to cache.\', expire INT DEFAULT 0 NOT NULL COMMENT \'A Unix timestamp indicating when the cache entry should expire, or -1 for never.\', created NUMERIC(14, 3) DEFAULT \'0.000\' NOT NULL COMMENT \'A timestamp with millisecond precision indicating when the cache entry was created.\', serialized SMALLINT DEFAULT 0 NOT NULL COMMENT \'A flag to indicate whether content is serialized (1) or not (0).\', tags LONGTEXT DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'Space-separated list of cache tags for this entry.\', checksum VARCHAR(255) NOT NULL COLLATE ascii_general_ci COMMENT \'The tag invalidation checksum when this entry was saved.\', INDEX created (created), INDEX expire (expire), PRIMARY KEY(cid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Storage for the cache API.\' ');
        $this->addSql('CREATE TABLE cache_container (cid VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE ascii_bin COMMENT \'Primary Key: Unique cache ID.\', data LONGBLOB DEFAULT NULL COMMENT \'A collection of data to cache.\', expire INT DEFAULT 0 NOT NULL COMMENT \'A Unix timestamp indicating when the cache entry should expire, or -1 for never.\', created NUMERIC(14, 3) DEFAULT \'0.000\' NOT NULL COMMENT \'A timestamp with millisecond precision indicating when the cache entry was created.\', serialized SMALLINT DEFAULT 0 NOT NULL COMMENT \'A flag to indicate whether content is serialized (1) or not (0).\', tags LONGTEXT DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'Space-separated list of cache tags for this entry.\', checksum VARCHAR(255) NOT NULL COLLATE ascii_general_ci COMMENT \'The tag invalidation checksum when this entry was saved.\', INDEX created (created), INDEX expire (expire), PRIMARY KEY(cid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Storage for the cache API.\' ');
        $this->addSql('CREATE TABLE cache_data (cid VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE ascii_bin COMMENT \'Primary Key: Unique cache ID.\', data LONGBLOB DEFAULT NULL COMMENT \'A collection of data to cache.\', expire INT DEFAULT 0 NOT NULL COMMENT \'A Unix timestamp indicating when the cache entry should expire, or -1 for never.\', created NUMERIC(14, 3) DEFAULT \'0.000\' NOT NULL COMMENT \'A timestamp with millisecond precision indicating when the cache entry was created.\', serialized SMALLINT DEFAULT 0 NOT NULL COMMENT \'A flag to indicate whether content is serialized (1) or not (0).\', tags LONGTEXT DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'Space-separated list of cache tags for this entry.\', checksum VARCHAR(255) NOT NULL COLLATE ascii_general_ci COMMENT \'The tag invalidation checksum when this entry was saved.\', INDEX created (created), INDEX expire (expire), PRIMARY KEY(cid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Storage for the cache API.\' ');
        $this->addSql('CREATE TABLE cache_default (cid VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE ascii_bin COMMENT \'Primary Key: Unique cache ID.\', data LONGBLOB DEFAULT NULL COMMENT \'A collection of data to cache.\', expire INT DEFAULT 0 NOT NULL COMMENT \'A Unix timestamp indicating when the cache entry should expire, or -1 for never.\', created NUMERIC(14, 3) DEFAULT \'0.000\' NOT NULL COMMENT \'A timestamp with millisecond precision indicating when the cache entry was created.\', serialized SMALLINT DEFAULT 0 NOT NULL COMMENT \'A flag to indicate whether content is serialized (1) or not (0).\', tags LONGTEXT DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'Space-separated list of cache tags for this entry.\', checksum VARCHAR(255) NOT NULL COLLATE ascii_general_ci COMMENT \'The tag invalidation checksum when this entry was saved.\', INDEX created (created), INDEX expire (expire), PRIMARY KEY(cid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Storage for the cache API.\' ');
        $this->addSql('CREATE TABLE cache_discovery (cid VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE ascii_bin COMMENT \'Primary Key: Unique cache ID.\', data LONGBLOB DEFAULT NULL COMMENT \'A collection of data to cache.\', expire INT DEFAULT 0 NOT NULL COMMENT \'A Unix timestamp indicating when the cache entry should expire, or -1 for never.\', created NUMERIC(14, 3) DEFAULT \'0.000\' NOT NULL COMMENT \'A timestamp with millisecond precision indicating when the cache entry was created.\', serialized SMALLINT DEFAULT 0 NOT NULL COMMENT \'A flag to indicate whether content is serialized (1) or not (0).\', tags LONGTEXT DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'Space-separated list of cache tags for this entry.\', checksum VARCHAR(255) NOT NULL COLLATE ascii_general_ci COMMENT \'The tag invalidation checksum when this entry was saved.\', INDEX created (created), INDEX expire (expire), PRIMARY KEY(cid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Storage for the cache API.\' ');
        $this->addSql('CREATE TABLE cache_entity (cid VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE ascii_bin COMMENT \'Primary Key: Unique cache ID.\', data LONGBLOB DEFAULT NULL COMMENT \'A collection of data to cache.\', expire INT DEFAULT 0 NOT NULL COMMENT \'A Unix timestamp indicating when the cache entry should expire, or -1 for never.\', created NUMERIC(14, 3) DEFAULT \'0.000\' NOT NULL COMMENT \'A timestamp with millisecond precision indicating when the cache entry was created.\', serialized SMALLINT DEFAULT 0 NOT NULL COMMENT \'A flag to indicate whether content is serialized (1) or not (0).\', tags LONGTEXT DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'Space-separated list of cache tags for this entry.\', checksum VARCHAR(255) NOT NULL COLLATE ascii_general_ci COMMENT \'The tag invalidation checksum when this entry was saved.\', INDEX created (created), INDEX expire (expire), PRIMARY KEY(cid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Storage for the cache API.\' ');
        $this->addSql('CREATE TABLE cache_menu (cid VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE ascii_bin COMMENT \'Primary Key: Unique cache ID.\', data LONGBLOB DEFAULT NULL COMMENT \'A collection of data to cache.\', expire INT DEFAULT 0 NOT NULL COMMENT \'A Unix timestamp indicating when the cache entry should expire, or -1 for never.\', created NUMERIC(14, 3) DEFAULT \'0.000\' NOT NULL COMMENT \'A timestamp with millisecond precision indicating when the cache entry was created.\', serialized SMALLINT DEFAULT 0 NOT NULL COMMENT \'A flag to indicate whether content is serialized (1) or not (0).\', tags LONGTEXT DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'Space-separated list of cache tags for this entry.\', checksum VARCHAR(255) NOT NULL COLLATE ascii_general_ci COMMENT \'The tag invalidation checksum when this entry was saved.\', INDEX created (created), INDEX expire (expire), PRIMARY KEY(cid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Storage for the cache API.\' ');
        $this->addSql('CREATE TABLE cache_render (cid VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE ascii_bin COMMENT \'Primary Key: Unique cache ID.\', data LONGBLOB DEFAULT NULL COMMENT \'A collection of data to cache.\', expire INT DEFAULT 0 NOT NULL COMMENT \'A Unix timestamp indicating when the cache entry should expire, or -1 for never.\', created NUMERIC(14, 3) DEFAULT \'0.000\' NOT NULL COMMENT \'A timestamp with millisecond precision indicating when the cache entry was created.\', serialized SMALLINT DEFAULT 0 NOT NULL COMMENT \'A flag to indicate whether content is serialized (1) or not (0).\', tags LONGTEXT DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'Space-separated list of cache tags for this entry.\', checksum VARCHAR(255) NOT NULL COLLATE ascii_general_ci COMMENT \'The tag invalidation checksum when this entry was saved.\', INDEX created (created), INDEX expire (expire), PRIMARY KEY(cid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Storage for the cache API.\' ');
        $this->addSql('CREATE TABLE cachetags (tag VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'Namespace-prefixed tag string.\', invalidations INT DEFAULT 0 NOT NULL COMMENT \'Number incremented when the tag is invalidated.\', PRIMARY KEY(tag)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Cache table for tracking cache tag invalidations.\' ');
        $this->addSql('CREATE TABLE comment (cid INT UNSIGNED AUTO_INCREMENT NOT NULL, comment_type VARCHAR(32) NOT NULL COLLATE ascii_general_ci COMMENT \'The ID of the target entity.\', uuid VARCHAR(128) NOT NULL COLLATE ascii_general_ci, langcode VARCHAR(12) NOT NULL COLLATE ascii_general_ci, INDEX comment_field__comment_type__target_id (comment_type), UNIQUE INDEX comment_field__uuid__value (uuid), PRIMARY KEY(cid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'The base table for comment entities.\' ');
        $this->addSql('CREATE TABLE comment__comment_body (deleted TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'A boolean indicating whether this data item has been deleted\', entity_id INT UNSIGNED NOT NULL COMMENT \'The entity id this data is attached to\', langcode VARCHAR(32) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The language code for this data item.\', delta INT UNSIGNED NOT NULL COMMENT \'The sequence number for this data item, used for multi-value fields\', bundle VARCHAR(128) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The field instance bundle to which this row belongs, used when deleting a field instance\', revision_id INT UNSIGNED NOT NULL COMMENT \'The entity revision id this data is attached to, which for an unversioned entity type is the same as the entity id\', comment_body_value LONGTEXT NOT NULL COLLATE utf8mb4_general_ci, comment_body_format VARCHAR(255) DEFAULT NULL COLLATE ascii_general_ci, INDEX bundle (bundle), INDEX comment_body_format (comment_body_format), INDEX revision_id (revision_id), PRIMARY KEY(entity_id, deleted, delta, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Data storage for comment field comment_body.\' ');
        $this->addSql('CREATE TABLE comment_entity_statistics (entity_id INT UNSIGNED DEFAULT 0 NOT NULL COMMENT \'The entity_id of the entity for which the statistics are compiled.\', entity_type VARCHAR(32) DEFAULT \'node\' NOT NULL COLLATE ascii_general_ci COMMENT \'The entity_type of the entity to which this comment is a reply.\', field_name VARCHAR(32) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The field_name of the field that was used to add this comment.\', cid INT DEFAULT 0 NOT NULL COMMENT \'The comment.cid of the last comment.\', last_comment_timestamp INT DEFAULT 0 NOT NULL COMMENT \'The Unix timestamp of the last comment that was posted within this node, from comment.changed.\', last_comment_name VARCHAR(60) DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'The name of the latest author to post a comment on this node, from comment.name.\', last_comment_uid INT UNSIGNED DEFAULT 0 NOT NULL COMMENT \'The user ID of the latest author to post a comment on this node, from comment.uid.\', comment_count INT UNSIGNED DEFAULT 0 NOT NULL COMMENT \'The total number of comments on this entity.\', INDEX comment_count (comment_count), INDEX last_comment_uid (last_comment_uid), INDEX last_comment_timestamp (last_comment_timestamp), PRIMARY KEY(entity_id, entity_type, field_name)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Maintains statistics of entity and comments posts to show â€¦\' ');
        $this->addSql('CREATE TABLE comment_field_data (cid INT UNSIGNED NOT NULL, langcode VARCHAR(12) NOT NULL COLLATE ascii_general_ci, comment_type VARCHAR(32) NOT NULL COLLATE ascii_general_ci COMMENT \'The ID of the target entity.\', status TINYINT(1) NOT NULL, uid INT UNSIGNED NOT NULL COMMENT \'The ID of the target entity.\', pid INT UNSIGNED DEFAULT NULL COMMENT \'The ID of the target entity.\', entity_id INT UNSIGNED DEFAULT NULL COMMENT \'The ID of the target entity.\', subject VARCHAR(64) DEFAULT NULL COLLATE utf8mb4_general_ci, name VARCHAR(60) DEFAULT NULL COLLATE utf8mb4_general_ci, mail VARCHAR(254) DEFAULT NULL COLLATE utf8mb4_general_ci, homepage VARCHAR(255) DEFAULT NULL COLLATE utf8mb4_general_ci, hostname VARCHAR(128) DEFAULT NULL COLLATE utf8mb4_general_ci, created INT NOT NULL, changed INT DEFAULT NULL, thread VARCHAR(255) NOT NULL COLLATE utf8mb4_general_ci, entity_type VARCHAR(32) NOT NULL COLLATE ascii_general_ci, field_name VARCHAR(32) NOT NULL COLLATE ascii_general_ci, default_langcode TINYINT(1) NOT NULL, INDEX comment_field__uid__target_id (uid), INDEX comment__status_comment_type (status, comment_type, cid), INDEX comment__entity_langcode (entity_id, entity_type, comment_type, default_langcode), INDEX comment__id__default_langcode__langcode (cid, default_langcode, langcode), INDEX comment_field__comment_type__target_id (comment_type), INDEX comment_field__created (created), INDEX comment__status_pid (pid, status), INDEX comment__num_new (entity_id, entity_type, comment_type, status, created, cid, thread(191)), PRIMARY KEY(cid, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'The data table for comment entities.\' ');
        $this->addSql('CREATE TABLE config (collection VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'Primary Key: Config object collection.\', name VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'Primary Key: Config object name.\', data LONGBLOB DEFAULT NULL COMMENT \'A serialized configuration object data.\', PRIMARY KEY(collection, name)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'The base table for configuration data.\' ');
        $this->addSql('CREATE TABLE file_managed (fid INT UNSIGNED AUTO_INCREMENT NOT NULL, uuid VARCHAR(128) NOT NULL COLLATE ascii_general_ci, langcode VARCHAR(12) NOT NULL COLLATE ascii_general_ci, uid INT UNSIGNED DEFAULT NULL COMMENT \'The ID of the target entity.\', filename VARCHAR(255) DEFAULT NULL COLLATE utf8mb4_general_ci, uri VARCHAR(255) NOT NULL COLLATE utf8mb4_bin, filemime VARCHAR(255) DEFAULT NULL COLLATE ascii_general_ci, filesize BIGINT UNSIGNED DEFAULT NULL, status TINYINT(1) NOT NULL, created INT DEFAULT NULL, changed INT NOT NULL, INDEX file_field__uid__target_id (uid), INDEX file_field__status (status), UNIQUE INDEX file_field__uuid__value (uuid), INDEX file_field__uri (uri(191)), INDEX file_field__changed (changed), PRIMARY KEY(fid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'The base table for file entities.\' ');
        $this->addSql('CREATE TABLE file_usage (fid INT UNSIGNED NOT NULL COMMENT \'File ID.\', module VARCHAR(50) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The name of the module that is using the file.\', type VARCHAR(64) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The name of the object type in which the file is used.\', id VARCHAR(64) DEFAULT \'0\' NOT NULL COLLATE ascii_general_ci COMMENT \'The primary key of the object using the file.\', count INT UNSIGNED DEFAULT 0 NOT NULL COMMENT \'The number of times this file is used by this object.\', INDEX type_id (type, id), INDEX fid_count (fid, count), INDEX fid_module (fid, module), PRIMARY KEY(fid, type, id, module)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Track where a file is used.\' ');
        $this->addSql('CREATE TABLE history (uid INT DEFAULT 0 NOT NULL COMMENT \'The users.uid that read the node nid.\', nid INT UNSIGNED DEFAULT 0 NOT NULL COMMENT \'The node.nid that was read.\', timestamp INT DEFAULT 0 NOT NULL COMMENT \'The Unix timestamp at which the read occurred.\', INDEX nid (nid), PRIMARY KEY(uid, nid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'A record of which users have read which nodes.\' ');
        $this->addSql('CREATE TABLE key_value (collection VARCHAR(128) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'A named collection of key and value pairs.\', name VARCHAR(128) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The key of the key-value pair. As KEY is a SQL reserved keyword, name was chosen instead.\', value LONGBLOB NOT NULL COMMENT \'The value.\', PRIMARY KEY(collection, name)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Generic key-value storage table. See the state system forâ€¦\' ');
        $this->addSql('CREATE TABLE key_value_expire (collection VARCHAR(128) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'A named collection of key and value pairs.\', name VARCHAR(128) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The key of the key/value pair.\', value LONGBLOB NOT NULL COMMENT \'The value of the key/value pair.\', expire INT DEFAULT 2147483647 NOT NULL COMMENT \'The time since Unix epoch in seconds when this item expires. Defaults to the maximum possible time.\', INDEX `all` (name, collection, expire), INDEX expire (expire), PRIMARY KEY(collection, name)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Generic key/value storage table with an expiration.\' ');
        $this->addSql('CREATE TABLE locale_file (project VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'A unique short name to identify the project the file belongs to.\', langcode VARCHAR(12) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'Language code of this translation. References language.langcode.\', filename VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Filename of the imported file.\', version VARCHAR(128) DEFAULT \'\' NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Version tag of the imported file.\', uri VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE utf8mb4_general_ci COMMENT \'URI of the remote file, the resulting local file or the locally imported file.\', timestamp INT DEFAULT 0 COMMENT \'Unix timestamp of the imported file.\', last_checked INT DEFAULT 0 COMMENT \'Unix timestamp of the last time this translation was confirmed to be the most recent release available.\', PRIMARY KEY(project, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'File import status information for interface translationâ€¦\' ');
        $this->addSql('CREATE TABLE locales_location (lid INT AUTO_INCREMENT NOT NULL COMMENT \'Unique identifier of this location.\', sid INT NOT NULL COMMENT \'Unique identifier of this string.\', type VARCHAR(50) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The location type (file, config, path, etc).\', name VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Type dependent location information (file name, path, etc).\', version VARCHAR(20) DEFAULT \'none\' NOT NULL COLLATE ascii_general_ci COMMENT \'Version of Drupal where the location was found.\', INDEX string_type (sid, type), INDEX string_id (sid), PRIMARY KEY(lid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Location information for source strings.\' ');
        $this->addSql('CREATE TABLE locales_source (lid INT AUTO_INCREMENT NOT NULL COMMENT \'Unique identifier of this string.\', source BLOB NOT NULL COMMENT \'The original string in English.\', context VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The context this string applies to.\', version VARCHAR(20) DEFAULT \'none\' NOT NULL COLLATE ascii_general_ci COMMENT \'Version of Drupal where the string was last used (for locales optimization).\', INDEX source_context (source(30), context), PRIMARY KEY(lid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'List of English source strings.\' ');
        $this->addSql('CREATE TABLE locales_target (lid INT DEFAULT 0 NOT NULL COMMENT \'Source string ID. References locales_source.lid.\', language VARCHAR(12) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'Language code. References language.langcode.\', translation BLOB NOT NULL COMMENT \'Translation string value in this language.\', customized INT DEFAULT 0 NOT NULL COMMENT \'Boolean indicating whether the translation is custom to this site.\', INDEX lid (lid), PRIMARY KEY(language, lid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Stores translated versions of strings.\' ');
        $this->addSql('CREATE TABLE menu_link_content (id INT UNSIGNED AUTO_INCREMENT NOT NULL, revision_id INT UNSIGNED DEFAULT NULL, bundle VARCHAR(32) NOT NULL COLLATE ascii_general_ci, uuid VARCHAR(128) NOT NULL COLLATE ascii_general_ci, langcode VARCHAR(12) NOT NULL COLLATE ascii_general_ci, UNIQUE INDEX menu_link_content__revision_id (revision_id), UNIQUE INDEX menu_link_content_field__uuid__value (uuid), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'The base table for menu_link_content entities.\' ');
        $this->addSql('CREATE TABLE menu_link_content_data (id INT UNSIGNED NOT NULL, langcode VARCHAR(12) NOT NULL COLLATE ascii_general_ci, revision_id INT UNSIGNED NOT NULL, bundle VARCHAR(32) NOT NULL COLLATE ascii_general_ci, enabled TINYINT(1) NOT NULL, title VARCHAR(255) DEFAULT NULL COLLATE utf8mb4_general_ci, description VARCHAR(255) DEFAULT NULL COLLATE utf8mb4_general_ci, menu_name VARCHAR(255) DEFAULT NULL COLLATE ascii_general_ci, link__uri VARCHAR(2048) DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'The URI of the link.\', link__title VARCHAR(255) DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'The link text.\', link__options LONGBLOB DEFAULT NULL COMMENT \'Serialized array of options for the link.\', external TINYINT(1) DEFAULT NULL, rediscover TINYINT(1) DEFAULT NULL, weight INT DEFAULT NULL, expanded TINYINT(1) DEFAULT NULL, parent VARCHAR(255) DEFAULT NULL COLLATE utf8mb4_general_ci, changed INT DEFAULT NULL, default_langcode TINYINT(1) NOT NULL, revision_translation_affected TINYINT(1) DEFAULT NULL, INDEX menu_link_content_field__link__uri (link__uri(30)), INDEX menu_link_content__id__default_langcode__langcode (id, default_langcode, langcode), INDEX menu_link_content__revision_id (revision_id), INDEX menu_link_content__enabled_bundle (enabled, bundle, id), PRIMARY KEY(id, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'The data table for menu_link_content entities.\' ');
        $this->addSql('CREATE TABLE menu_link_content_field_revision (revision_id INT UNSIGNED NOT NULL, langcode VARCHAR(12) NOT NULL COLLATE ascii_general_ci, id INT UNSIGNED NOT NULL, enabled TINYINT(1) NOT NULL, title VARCHAR(255) DEFAULT NULL COLLATE utf8mb4_general_ci, description VARCHAR(255) DEFAULT NULL COLLATE utf8mb4_general_ci, link__uri VARCHAR(2048) DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'The URI of the link.\', link__title VARCHAR(255) DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'The link text.\', link__options LONGBLOB DEFAULT NULL COMMENT \'Serialized array of options for the link.\', external TINYINT(1) DEFAULT NULL, changed INT DEFAULT NULL, default_langcode TINYINT(1) NOT NULL, revision_translation_affected TINYINT(1) DEFAULT NULL, INDEX menu_link_content__id__default_langcode__langcode (id, default_langcode, langcode), INDEX menu_link_content_field__link__uri (link__uri(30)), PRIMARY KEY(revision_id, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'The revision data table for menu_link_content entities.\' ');
        $this->addSql('CREATE TABLE menu_link_content_revision (revision_id INT UNSIGNED AUTO_INCREMENT NOT NULL, id INT UNSIGNED NOT NULL, langcode VARCHAR(12) NOT NULL COLLATE ascii_general_ci, revision_user INT UNSIGNED DEFAULT NULL COMMENT \'The ID of the target entity.\', revision_created INT DEFAULT NULL, revision_log_message LONGTEXT DEFAULT NULL COLLATE utf8mb4_general_ci, revision_default TINYINT(1) DEFAULT NULL, INDEX menu_link_content__ef029a1897 (revision_user), INDEX menu_link_content__id (id), PRIMARY KEY(revision_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'The revision table for menu_link_content entities.\' ');
        $this->addSql('CREATE TABLE menu_tree (mlid INT UNSIGNED AUTO_INCREMENT NOT NULL COMMENT \'The menu link ID (mlid) is the integer primary key.\', menu_name VARCHAR(32) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The menu name. All links with the same menu name (such as \'\'tools\'\') are part of the same menu.\', id VARCHAR(255) NOT NULL COLLATE ascii_general_ci COMMENT \'Unique machine name: the plugin ID.\', parent VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The plugin ID for the parent of this link.\', route_name VARCHAR(255) DEFAULT NULL COLLATE ascii_general_ci COMMENT \'The machine name of a defined Symfony Route this menu item represents.\', route_param_key VARCHAR(255) DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'An encoded string of route parameters for loading by route.\', route_parameters LONGBLOB DEFAULT NULL COMMENT \'Serialized array of route parameters of this menu link.\', url VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE utf8mb4_general_ci COMMENT \'The external path this link points to (when not using a route).\', title LONGBLOB DEFAULT NULL COMMENT \'The serialized title for the link. May be a TranslatableMarkup.\', description LONGBLOB DEFAULT NULL COMMENT \'The serialized description of this link - used for admin pages and title attribute. May be a TranslatableMarkup.\', class TEXT DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'The class for this link plugin.\', options LONGBLOB DEFAULT NULL COMMENT \'A serialized array of URL options, such as a query string or HTML attributes.\', provider VARCHAR(50) DEFAULT \'system\' NOT NULL COLLATE ascii_general_ci COMMENT \'The name of the module that generated this link.\', enabled SMALLINT DEFAULT 1 NOT NULL COMMENT \'A flag for whether the link should be rendered in menus. (0 = a disabled menu item that may be shown on admin screens, 1 = a normal, visible link)\', discovered SMALLINT DEFAULT 0 NOT NULL COMMENT \'A flag for whether the link was discovered, so can be purged on rebuild\', expanded SMALLINT DEFAULT 0 NOT NULL COMMENT \'Flag for whether this link should be rendered as expanded in menus - expanded links always have their child links displayed, instead of only when the link is in the active trail (1 = expanded, 0 = not expanded)\', weight INT DEFAULT 0 NOT NULL COMMENT \'Link weight among links in the same menu at the same depth.\', metadata LONGBLOB DEFAULT NULL COMMENT \'A serialized array of data that may be used by the plugin instance.\', has_children SMALLINT DEFAULT 0 NOT NULL COMMENT \'Flag indicating whether any enabled links have this link as a parent (1 = enabled children exist, 0 = no enabled children).\', depth SMALLINT DEFAULT 0 NOT NULL COMMENT \'The depth relative to the top level. A link with empty parent will have depth == 1.\', p1 INT UNSIGNED DEFAULT 0 NOT NULL COMMENT \'The first mlid in the materialized path. If N = depth, then pN must equal the mlid. If depth > 1 then p(N-1) must equal the parent link mlid. All pX where X > depth must equal zero. The columns p1 .. p9 are also called the parents.\', p2 INT UNSIGNED DEFAULT 0 NOT NULL COMMENT \'The second mlid in the materialized path. See p1.\', p3 INT UNSIGNED DEFAULT 0 NOT NULL COMMENT \'The third mlid in the materialized path. See p1.\', p4 INT UNSIGNED DEFAULT 0 NOT NULL COMMENT \'The fourth mlid in the materialized path. See p1.\', p5 INT UNSIGNED DEFAULT 0 NOT NULL COMMENT \'The fifth mlid in the materialized path. See p1.\', p6 INT UNSIGNED DEFAULT 0 NOT NULL COMMENT \'The sixth mlid in the materialized path. See p1.\', p7 INT UNSIGNED DEFAULT 0 NOT NULL COMMENT \'The seventh mlid in the materialized path. See p1.\', p8 INT UNSIGNED DEFAULT 0 NOT NULL COMMENT \'The eighth mlid in the materialized path. See p1.\', p9 INT UNSIGNED DEFAULT 0 NOT NULL COMMENT \'The ninth mlid in the materialized path. See p1.\', form_class VARCHAR(255) DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'meh\', INDEX menu_parents (menu_name, p1, p2, p3, p4, p5, p6, p7, p8, p9), INDEX route_values (route_name(32), route_param_key(16)), INDEX menu_parent_expand_child (menu_name, expanded, has_children, parent(16)), UNIQUE INDEX id (id), PRIMARY KEY(mlid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Contains the menu tree hierarchy.\' ');
        $this->addSql('CREATE TABLE node (nid INT UNSIGNED AUTO_INCREMENT NOT NULL, vid INT UNSIGNED DEFAULT NULL, type VARCHAR(32) NOT NULL COLLATE ascii_general_ci COMMENT \'The ID of the target entity.\', uuid VARCHAR(128) NOT NULL COLLATE ascii_general_ci, langcode VARCHAR(12) NOT NULL COLLATE ascii_general_ci, UNIQUE INDEX node__vid (vid), UNIQUE INDEX node_field__uuid__value (uuid), INDEX node_field__type__target_id (type), PRIMARY KEY(nid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'The base table for node entities.\' ');
        $this->addSql('CREATE TABLE node__body (deleted TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'A boolean indicating whether this data item has been deleted\', entity_id INT UNSIGNED NOT NULL COMMENT \'The entity id this data is attached to\', langcode VARCHAR(32) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The language code for this data item.\', delta INT UNSIGNED NOT NULL COMMENT \'The sequence number for this data item, used for multi-value fields\', bundle VARCHAR(128) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The field instance bundle to which this row belongs, used when deleting a field instance\', revision_id INT UNSIGNED NOT NULL COMMENT \'The entity revision id this data is attached to\', body_value LONGTEXT NOT NULL COLLATE utf8mb4_general_ci, body_summary LONGTEXT DEFAULT NULL COLLATE utf8mb4_general_ci, body_format VARCHAR(255) DEFAULT NULL COLLATE ascii_general_ci, INDEX bundle (bundle), INDEX body_format (body_format), INDEX revision_id (revision_id), PRIMARY KEY(entity_id, deleted, delta, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Data storage for node field body.\' ');
        $this->addSql('CREATE TABLE node__comment (deleted TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'A boolean indicating whether this data item has been deleted\', entity_id INT UNSIGNED NOT NULL COMMENT \'The entity id this data is attached to\', langcode VARCHAR(32) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The language code for this data item.\', delta INT UNSIGNED NOT NULL COMMENT \'The sequence number for this data item, used for multi-value fields\', bundle VARCHAR(128) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The field instance bundle to which this row belongs, used when deleting a field instance\', revision_id INT UNSIGNED NOT NULL COMMENT \'The entity revision id this data is attached to\', comment_status INT DEFAULT 0 NOT NULL COMMENT \'Whether comments are allowed on this entity: 0 = no, 1 = closed (read only), 2 = open (read/write).\', INDEX bundle (bundle), INDEX revision_id (revision_id), PRIMARY KEY(entity_id, deleted, delta, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Data storage for node field comment.\' ');
        $this->addSql('CREATE TABLE node__field_image (deleted TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'A boolean indicating whether this data item has been deleted\', entity_id INT UNSIGNED NOT NULL COMMENT \'The entity id this data is attached to\', langcode VARCHAR(32) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The language code for this data item.\', delta INT UNSIGNED NOT NULL COMMENT \'The sequence number for this data item, used for multi-value fields\', bundle VARCHAR(128) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The field instance bundle to which this row belongs, used when deleting a field instance\', revision_id INT UNSIGNED NOT NULL COMMENT \'The entity revision id this data is attached to\', field_image_target_id INT UNSIGNED NOT NULL COMMENT \'The ID of the file entity.\', field_image_alt VARCHAR(512) DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'Alternative image text, for the image\'\'s \'\'alt\'\' attribute.\', field_image_title VARCHAR(1024) DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'Image title text, for the image\'\'s \'\'title\'\' attribute.\', field_image_width INT UNSIGNED DEFAULT NULL COMMENT \'The width of the image in pixels.\', field_image_height INT UNSIGNED DEFAULT NULL COMMENT \'The height of the image in pixels.\', INDEX bundle (bundle), INDEX field_image_target_id (field_image_target_id), INDEX revision_id (revision_id), PRIMARY KEY(entity_id, deleted, delta, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Data storage for node field field_image.\' ');
        $this->addSql('CREATE TABLE node__field_tags (deleted TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'A boolean indicating whether this data item has been deleted\', entity_id INT UNSIGNED NOT NULL COMMENT \'The entity id this data is attached to\', langcode VARCHAR(32) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The language code for this data item.\', delta INT UNSIGNED NOT NULL COMMENT \'The sequence number for this data item, used for multi-value fields\', bundle VARCHAR(128) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The field instance bundle to which this row belongs, used when deleting a field instance\', revision_id INT UNSIGNED NOT NULL COMMENT \'The entity revision id this data is attached to\', field_tags_target_id INT UNSIGNED NOT NULL COMMENT \'The ID of the target entity.\', INDEX bundle (bundle), INDEX field_tags_target_id (field_tags_target_id), INDEX revision_id (revision_id), PRIMARY KEY(entity_id, deleted, delta, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Data storage for node field field_tags.\' ');
        $this->addSql('CREATE TABLE node_access (nid INT UNSIGNED DEFAULT 0 NOT NULL COMMENT \'The node.nid this record affects.\', langcode VARCHAR(12) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The language.langcode of this node.\', gid INT UNSIGNED DEFAULT 0 NOT NULL COMMENT \'The grant ID a user must possess in the specified realm to gain this row\'\'s privileges on the node.\', realm VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The realm in which the user must possess the grant ID. Modules can define one or more realms by implementing hook_node_grants().\', fallback TINYINT(1) DEFAULT \'1\' NOT NULL COMMENT \'Boolean indicating whether this record should be used as a fallback if a language condition is not provided.\', grant_view TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'Boolean indicating whether a user with the realm/grant pair can view this node.\', grant_update TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'Boolean indicating whether a user with the realm/grant pair can edit this node.\', grant_delete TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'Boolean indicating whether a user with the realm/grant pair can delete this node.\', PRIMARY KEY(nid, gid, realm, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Identifies which realm/grant pairs a user must possess inâ€¦\' ');
        $this->addSql('CREATE TABLE node_field_data (nid INT UNSIGNED NOT NULL, langcode VARCHAR(12) NOT NULL COLLATE ascii_general_ci, vid INT UNSIGNED NOT NULL, type VARCHAR(32) NOT NULL COLLATE ascii_general_ci COMMENT \'The ID of the target entity.\', status TINYINT(1) NOT NULL, uid INT UNSIGNED NOT NULL COMMENT \'The ID of the target entity.\', title VARCHAR(255) NOT NULL COLLATE utf8mb4_general_ci, created INT NOT NULL, changed INT NOT NULL, promote TINYINT(1) NOT NULL, sticky TINYINT(1) NOT NULL, default_langcode TINYINT(1) NOT NULL, revision_translation_affected TINYINT(1) DEFAULT NULL, INDEX node__id__default_langcode__langcode (nid, default_langcode, langcode), INDEX node_field__type__target_id (type), INDEX node_field__created (created), INDEX node__status_type (status, type, nid), INDEX node__frontpage (promote, status, sticky, created), INDEX node__vid (vid), INDEX node__title_type (title(191), type(4)), INDEX node_field__uid__target_id (uid), INDEX node_field__changed (changed), PRIMARY KEY(nid, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'The data table for node entities.\' ');
        $this->addSql('CREATE TABLE node_field_revision (vid INT UNSIGNED NOT NULL, langcode VARCHAR(12) NOT NULL COLLATE ascii_general_ci, nid INT UNSIGNED NOT NULL, status TINYINT(1) NOT NULL, uid INT UNSIGNED NOT NULL COMMENT \'The ID of the target entity.\', title VARCHAR(255) DEFAULT NULL COLLATE utf8mb4_general_ci, created INT DEFAULT NULL, changed INT DEFAULT NULL, promote TINYINT(1) DEFAULT NULL, sticky TINYINT(1) DEFAULT NULL, default_langcode TINYINT(1) NOT NULL, revision_translation_affected TINYINT(1) DEFAULT NULL, INDEX node__id__default_langcode__langcode (nid, default_langcode, langcode), INDEX node_field__uid__target_id (uid), PRIMARY KEY(vid, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'The revision data table for node entities.\' ');
        $this->addSql('CREATE TABLE node_revision (vid INT UNSIGNED AUTO_INCREMENT NOT NULL, nid INT UNSIGNED NOT NULL, langcode VARCHAR(12) NOT NULL COLLATE ascii_general_ci, revision_uid INT UNSIGNED DEFAULT NULL COMMENT \'The ID of the target entity.\', revision_timestamp INT DEFAULT NULL, revision_log LONGTEXT DEFAULT NULL COLLATE utf8mb4_general_ci, revision_default TINYINT(1) DEFAULT NULL, INDEX node_field__langcode (langcode), INDEX node__nid (nid), INDEX node_field__revision_uid__target_id (revision_uid), PRIMARY KEY(vid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'The revision table for node entities.\' ');
        $this->addSql('CREATE TABLE node_revision__body (deleted TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'A boolean indicating whether this data item has been deleted\', entity_id INT UNSIGNED NOT NULL COMMENT \'The entity id this data is attached to\', revision_id INT UNSIGNED NOT NULL COMMENT \'The entity revision id this data is attached to\', langcode VARCHAR(32) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The language code for this data item.\', delta INT UNSIGNED NOT NULL COMMENT \'The sequence number for this data item, used for multi-value fields\', bundle VARCHAR(128) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The field instance bundle to which this row belongs, used when deleting a field instance\', body_value LONGTEXT NOT NULL COLLATE utf8mb4_general_ci, body_summary LONGTEXT DEFAULT NULL COLLATE utf8mb4_general_ci, body_format VARCHAR(255) DEFAULT NULL COLLATE ascii_general_ci, INDEX revision_id (revision_id), INDEX bundle (bundle), INDEX body_format (body_format), PRIMARY KEY(entity_id, revision_id, deleted, delta, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Revision archive storage for node field body.\' ');
        $this->addSql('CREATE TABLE node_revision__comment (deleted TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'A boolean indicating whether this data item has been deleted\', entity_id INT UNSIGNED NOT NULL COMMENT \'The entity id this data is attached to\', revision_id INT UNSIGNED NOT NULL COMMENT \'The entity revision id this data is attached to\', langcode VARCHAR(32) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The language code for this data item.\', delta INT UNSIGNED NOT NULL COMMENT \'The sequence number for this data item, used for multi-value fields\', bundle VARCHAR(128) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The field instance bundle to which this row belongs, used when deleting a field instance\', comment_status INT DEFAULT 0 NOT NULL COMMENT \'Whether comments are allowed on this entity: 0 = no, 1 = closed (read only), 2 = open (read/write).\', INDEX revision_id (revision_id), INDEX bundle (bundle), PRIMARY KEY(entity_id, revision_id, deleted, delta, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Revision archive storage for node field comment.\' ');
        $this->addSql('CREATE TABLE node_revision__field_image (deleted TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'A boolean indicating whether this data item has been deleted\', entity_id INT UNSIGNED NOT NULL COMMENT \'The entity id this data is attached to\', revision_id INT UNSIGNED NOT NULL COMMENT \'The entity revision id this data is attached to\', langcode VARCHAR(32) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The language code for this data item.\', delta INT UNSIGNED NOT NULL COMMENT \'The sequence number for this data item, used for multi-value fields\', bundle VARCHAR(128) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The field instance bundle to which this row belongs, used when deleting a field instance\', field_image_target_id INT UNSIGNED NOT NULL COMMENT \'The ID of the file entity.\', field_image_alt VARCHAR(512) DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'Alternative image text, for the image\'\'s \'\'alt\'\' attribute.\', field_image_title VARCHAR(1024) DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'Image title text, for the image\'\'s \'\'title\'\' attribute.\', field_image_width INT UNSIGNED DEFAULT NULL COMMENT \'The width of the image in pixels.\', field_image_height INT UNSIGNED DEFAULT NULL COMMENT \'The height of the image in pixels.\', INDEX revision_id (revision_id), INDEX bundle (bundle), INDEX field_image_target_id (field_image_target_id), PRIMARY KEY(entity_id, revision_id, deleted, delta, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Revision archive storage for node field field_image.\' ');
        $this->addSql('CREATE TABLE node_revision__field_tags (deleted TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'A boolean indicating whether this data item has been deleted\', entity_id INT UNSIGNED NOT NULL COMMENT \'The entity id this data is attached to\', revision_id INT UNSIGNED NOT NULL COMMENT \'The entity revision id this data is attached to\', langcode VARCHAR(32) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The language code for this data item.\', delta INT UNSIGNED NOT NULL COMMENT \'The sequence number for this data item, used for multi-value fields\', bundle VARCHAR(128) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The field instance bundle to which this row belongs, used when deleting a field instance\', field_tags_target_id INT UNSIGNED NOT NULL COMMENT \'The ID of the target entity.\', INDEX revision_id (revision_id), INDEX bundle (bundle), INDEX field_tags_target_id (field_tags_target_id), PRIMARY KEY(entity_id, revision_id, deleted, delta, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Revision archive storage for node field field_tags.\' ');
        $this->addSql('CREATE TABLE queue (item_id INT UNSIGNED AUTO_INCREMENT NOT NULL COMMENT \'Primary Key: Unique item ID.\', name VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The queue name.\', data LONGBLOB DEFAULT NULL COMMENT \'The arbitrary data for the item.\', expire INT DEFAULT 0 NOT NULL COMMENT \'Timestamp when the claim lease expires on the item.\', created INT DEFAULT 0 NOT NULL COMMENT \'Timestamp when the item was created.\', INDEX expire (expire), INDEX name_created (name, created), PRIMARY KEY(item_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Stores items in queues.\' ');
        $this->addSql('CREATE TABLE router (name VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'Primary Key: Machine name of this route\', path VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE utf8mb4_general_ci COMMENT \'The path for this URI\', pattern_outline VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE utf8mb4_general_ci COMMENT \'The pattern\', fit INT DEFAULT 0 NOT NULL COMMENT \'A numeric representation of how specific the path is.\', route LONGBLOB DEFAULT NULL COMMENT \'A serialized Route object\', number_parts SMALLINT DEFAULT 0 NOT NULL COMMENT \'Number of parts in this router path.\', INDEX pattern_outline_parts (pattern_outline(191), number_parts), PRIMARY KEY(name)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Maps paths to various callbacks (access, page and title)\' ');
        $this->addSql('CREATE TABLE search_dataset (sid INT UNSIGNED DEFAULT 0 NOT NULL COMMENT \'Search item ID, e.g. node ID for nodes.\', langcode VARCHAR(12) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The languages.langcode of the item variant.\', type VARCHAR(64) NOT NULL COLLATE ascii_general_ci COMMENT \'Type of item, e.g. node.\', data LONGTEXT NOT NULL COLLATE utf8mb4_general_ci COMMENT \'List of space-separated words from the item.\', reindex INT UNSIGNED DEFAULT 0 NOT NULL COMMENT \'Set to force node reindexing.\', PRIMARY KEY(sid, langcode, type)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Stores items that will be searched.\' ');
        $this->addSql('CREATE TABLE search_index (word VARCHAR(50) DEFAULT \'\' NOT NULL COLLATE utf8mb4_general_ci COMMENT \'The search_total.word that is associated with the search item.\', sid INT UNSIGNED DEFAULT 0 NOT NULL COMMENT \'The search_dataset.sid of the searchable item to which the word belongs.\', langcode VARCHAR(12) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The languages.langcode of the item variant.\', type VARCHAR(64) NOT NULL COLLATE ascii_general_ci COMMENT \'The search_dataset.type of the searchable item to which the word belongs.\', score DOUBLE PRECISION DEFAULT NULL COMMENT \'The numeric score of the word, higher being more important.\', INDEX sid_type (sid, langcode, type), PRIMARY KEY(word, sid, langcode, type)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Stores the search index, associating words, items andâ€¦\' ');
        $this->addSql('CREATE TABLE search_total (word VARCHAR(50) DEFAULT \'\' NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Primary Key: Unique word in the search index.\', count DOUBLE PRECISION DEFAULT NULL COMMENT \'The count of the word in the index using Zipf\'\'s law to equalize the probability distribution.\', PRIMARY KEY(word)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Stores search totals for words.\' ');
        $this->addSql('CREATE TABLE semaphore (name VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'Primary Key: Unique name.\', value VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'A value for the semaphore.\', expire DOUBLE PRECISION NOT NULL COMMENT \'A Unix timestamp with microseconds indicating when the semaphore should expire.\', INDEX expire (expire), INDEX value (value), PRIMARY KEY(name)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Table for holding semaphores, locks, flags, etc. thatâ€¦\' ');
        $this->addSql('CREATE TABLE sequences (value INT UNSIGNED AUTO_INCREMENT NOT NULL COMMENT \'The value of the sequence.\', PRIMARY KEY(value)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Stores IDs.\' ');
        $this->addSql('CREATE TABLE sessions (sid VARCHAR(128) NOT NULL COLLATE ascii_general_ci COMMENT \'A session ID (hashed). The value is generated by Drupal\'\'s session handlers.\', uid INT UNSIGNED NOT NULL COMMENT \'The users.uid corresponding to a session, or 0 for anonymous user.\', hostname VARCHAR(128) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The IP address that last used this session ID (sid).\', timestamp INT DEFAULT 0 NOT NULL COMMENT \'The Unix timestamp when this session last requested a page. Old records are purged by PHP automatically.\', session LONGBLOB DEFAULT NULL COMMENT \'The serialized contents of $_SESSION, an array of name/value pairs that persists across page requests by this session ID. Drupal loads $_SESSION from here at the start of each request and saves it at the end.\', INDEX uid (uid), INDEX timestamp (timestamp), PRIMARY KEY(sid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Drupal\'\'s session handlers read and write into the sessionsâ€¦\' ');
        $this->addSql('CREATE TABLE shortcut (id INT UNSIGNED AUTO_INCREMENT NOT NULL, shortcut_set VARCHAR(32) NOT NULL COLLATE ascii_general_ci COMMENT \'The ID of the target entity.\', uuid VARCHAR(128) NOT NULL COLLATE ascii_general_ci, langcode VARCHAR(12) NOT NULL COLLATE ascii_general_ci, INDEX shortcut_field__shortcut_set__target_id (shortcut_set), UNIQUE INDEX shortcut_field__uuid__value (uuid), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'The base table for shortcut entities.\' ');
        $this->addSql('CREATE TABLE shortcut_field_data (id INT UNSIGNED NOT NULL, langcode VARCHAR(12) NOT NULL COLLATE ascii_general_ci, shortcut_set VARCHAR(32) NOT NULL COLLATE ascii_general_ci COMMENT \'The ID of the target entity.\', title VARCHAR(255) DEFAULT NULL COLLATE utf8mb4_general_ci, weight INT DEFAULT NULL, link__uri VARCHAR(2048) DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'The URI of the link.\', link__title VARCHAR(255) DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'The link text.\', link__options LONGBLOB DEFAULT NULL COMMENT \'Serialized array of options for the link.\', default_langcode TINYINT(1) NOT NULL, INDEX shortcut__id__default_langcode__langcode (id, default_langcode, langcode), INDEX shortcut_field__link__uri (link__uri(30)), INDEX shortcut_field__shortcut_set__target_id (shortcut_set), PRIMARY KEY(id, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'The data table for shortcut entities.\' ');
        $this->addSql('CREATE TABLE shortcut_set_users (uid INT UNSIGNED DEFAULT 0 NOT NULL COMMENT \'The users.uid for this set.\', set_name VARCHAR(32) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The shortcut_set.set_name that will be displayed for this user.\', INDEX set_name (set_name), PRIMARY KEY(uid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Maps users to shortcut sets.\' ');
        $this->addSql('CREATE TABLE taxonomy_index (nid INT UNSIGNED DEFAULT 0 NOT NULL COMMENT \'The node.nid this record tracks.\', tid INT UNSIGNED DEFAULT 0 NOT NULL COMMENT \'The term ID.\', status INT DEFAULT 1 NOT NULL COMMENT \'Boolean indicating whether the node is published (visible to non-administrators).\', sticky TINYINT(1) DEFAULT \'0\' COMMENT \'Boolean indicating whether the node is sticky.\', created INT DEFAULT 0 NOT NULL COMMENT \'The Unix timestamp when the node was created.\', INDEX term_node (tid, status, sticky, created), PRIMARY KEY(nid, tid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Maintains denormalized information about node/termâ€¦\' ');
        $this->addSql('CREATE TABLE taxonomy_term__parent (deleted TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'A boolean indicating whether this data item has been deleted\', entity_id INT UNSIGNED NOT NULL COMMENT \'The entity id this data is attached to\', langcode VARCHAR(32) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The language code for this data item.\', delta INT UNSIGNED NOT NULL COMMENT \'The sequence number for this data item, used for multi-value fields\', bundle VARCHAR(128) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The field instance bundle to which this row belongs, used when deleting a field instance\', revision_id INT UNSIGNED NOT NULL COMMENT \'The entity revision id this data is attached to\', parent_target_id INT UNSIGNED NOT NULL COMMENT \'The ID of the target entity.\', INDEX revision_id (revision_id), INDEX bundle_delta_target_id (bundle, delta, parent_target_id), INDEX parent_target_id (parent_target_id), PRIMARY KEY(entity_id, deleted, delta, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Data storage for taxonomy_term field parent.\' ');
        $this->addSql('CREATE TABLE taxonomy_term_data (tid INT UNSIGNED AUTO_INCREMENT NOT NULL, revision_id INT UNSIGNED DEFAULT NULL, vid VARCHAR(32) NOT NULL COLLATE ascii_general_ci COMMENT \'The ID of the target entity.\', uuid VARCHAR(128) NOT NULL COLLATE ascii_general_ci, langcode VARCHAR(12) NOT NULL COLLATE ascii_general_ci, UNIQUE INDEX taxonomy_term__revision_id (revision_id), UNIQUE INDEX taxonomy_term_field__uuid__value (uuid), INDEX taxonomy_term_field__vid__target_id (vid), PRIMARY KEY(tid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'The base table for taxonomy_term entities.\' ');
        $this->addSql('CREATE TABLE taxonomy_term_field_data (tid INT UNSIGNED NOT NULL, langcode VARCHAR(12) NOT NULL COLLATE ascii_general_ci, revision_id INT UNSIGNED NOT NULL, vid VARCHAR(32) NOT NULL COLLATE ascii_general_ci COMMENT \'The ID of the target entity.\', status TINYINT(1) NOT NULL, name VARCHAR(255) NOT NULL COLLATE utf8mb4_general_ci, description__value LONGTEXT DEFAULT NULL COLLATE utf8mb4_general_ci, description__format VARCHAR(255) DEFAULT NULL COLLATE ascii_general_ci, weight INT NOT NULL, changed INT DEFAULT NULL, default_langcode TINYINT(1) NOT NULL, revision_translation_affected TINYINT(1) DEFAULT NULL, INDEX taxonomy_term_field__name (name(191)), INDEX taxonomy_term__tree (vid, weight, name(191)), INDEX taxonomy_term__id__default_langcode__langcode (tid, default_langcode, langcode), INDEX taxonomy_term__revision_id (revision_id), INDEX taxonomy_term__status_vid (status, vid, tid), INDEX taxonomy_term__vid_name (vid, name(191)), PRIMARY KEY(tid, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'The data table for taxonomy_term entities.\' ');
        $this->addSql('CREATE TABLE taxonomy_term_field_revision (revision_id INT UNSIGNED NOT NULL, langcode VARCHAR(12) NOT NULL COLLATE ascii_general_ci, tid INT UNSIGNED NOT NULL, status TINYINT(1) NOT NULL, name VARCHAR(255) DEFAULT NULL COLLATE utf8mb4_general_ci, description__value LONGTEXT DEFAULT NULL COLLATE utf8mb4_general_ci, description__format VARCHAR(255) DEFAULT NULL COLLATE ascii_general_ci, changed INT DEFAULT NULL, default_langcode TINYINT(1) NOT NULL, revision_translation_affected TINYINT(1) DEFAULT NULL, INDEX taxonomy_term__id__default_langcode__langcode (tid, default_langcode, langcode), INDEX taxonomy_term_field__description__format (description__format), PRIMARY KEY(revision_id, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'The revision data table for taxonomy_term entities.\' ');
        $this->addSql('CREATE TABLE taxonomy_term_revision (revision_id INT UNSIGNED AUTO_INCREMENT NOT NULL, tid INT UNSIGNED NOT NULL, langcode VARCHAR(12) NOT NULL COLLATE ascii_general_ci, revision_user INT UNSIGNED DEFAULT NULL COMMENT \'The ID of the target entity.\', revision_created INT DEFAULT NULL, revision_log_message LONGTEXT DEFAULT NULL COLLATE utf8mb4_general_ci, revision_default TINYINT(1) DEFAULT NULL, INDEX taxonomy_term_field__revision_user__target_id (revision_user), INDEX taxonomy_term__tid (tid), PRIMARY KEY(revision_id)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'The revision table for taxonomy_term entities.\' ');
        $this->addSql('CREATE TABLE taxonomy_term_revision__parent (deleted TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'A boolean indicating whether this data item has been deleted\', entity_id INT UNSIGNED NOT NULL COMMENT \'The entity id this data is attached to\', revision_id INT UNSIGNED NOT NULL COMMENT \'The entity revision id this data is attached to\', langcode VARCHAR(32) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The language code for this data item.\', delta INT UNSIGNED NOT NULL COMMENT \'The sequence number for this data item, used for multi-value fields\', bundle VARCHAR(128) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The field instance bundle to which this row belongs, used when deleting a field instance\', parent_target_id INT UNSIGNED NOT NULL COMMENT \'The ID of the target entity.\', INDEX revision_id (revision_id), INDEX bundle (bundle), INDEX parent_target_id (parent_target_id), PRIMARY KEY(entity_id, revision_id, deleted, delta, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Revision archive storage for taxonomy_term field parent.\' ');
        $this->addSql('CREATE TABLE url_alias (pid INT UNSIGNED AUTO_INCREMENT NOT NULL COMMENT \'A unique path alias identifier.\', source VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE utf8mb4_general_ci COMMENT \'The Drupal path this alias is for. e.g. node/12.\', alias VARCHAR(255) DEFAULT \'\' NOT NULL COLLATE utf8mb4_general_ci COMMENT \'The alias for this path. e.g. title-of-the-story.\', langcode VARCHAR(12) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The language code this alias is for. if \'\'und\'\', the alias will be used for unknown languages. Each Drupal path can have an alias for each supported language.\', INDEX source_langcode_pid (source(191), langcode, pid), INDEX alias_langcode_pid (alias(191), langcode, pid), PRIMARY KEY(pid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'A list of URL aliases for Drupal paths. a user may visitâ€¦\' ');
        $this->addSql('CREATE TABLE user__roles (deleted TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'A boolean indicating whether this data item has been deleted\', entity_id INT UNSIGNED NOT NULL COMMENT \'The entity id this data is attached to\', langcode VARCHAR(32) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The language code for this data item.\', delta INT UNSIGNED NOT NULL COMMENT \'The sequence number for this data item, used for multi-value fields\', bundle VARCHAR(128) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The field instance bundle to which this row belongs, used when deleting a field instance\', revision_id INT UNSIGNED NOT NULL COMMENT \'The entity revision id this data is attached to, which for an unversioned entity type is the same as the entity id\', roles_target_id VARCHAR(255) NOT NULL COLLATE ascii_general_ci COMMENT \'The ID of the target entity.\', INDEX bundle (bundle), INDEX roles_target_id (roles_target_id), INDEX revision_id (revision_id), PRIMARY KEY(entity_id, deleted, delta, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Data storage for user field roles.\' ');
        $this->addSql('CREATE TABLE user__user_picture (deleted TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'A boolean indicating whether this data item has been deleted\', entity_id INT UNSIGNED NOT NULL COMMENT \'The entity id this data is attached to\', langcode VARCHAR(32) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The language code for this data item.\', delta INT UNSIGNED NOT NULL COMMENT \'The sequence number for this data item, used for multi-value fields\', bundle VARCHAR(128) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The field instance bundle to which this row belongs, used when deleting a field instance\', revision_id INT UNSIGNED NOT NULL COMMENT \'The entity revision id this data is attached to, which for an unversioned entity type is the same as the entity id\', user_picture_target_id INT UNSIGNED NOT NULL COMMENT \'The ID of the file entity.\', user_picture_alt VARCHAR(512) DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'Alternative image text, for the image\'\'s \'\'alt\'\' attribute.\', user_picture_title VARCHAR(1024) DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'Image title text, for the image\'\'s \'\'title\'\' attribute.\', user_picture_width INT UNSIGNED DEFAULT NULL COMMENT \'The width of the image in pixels.\', user_picture_height INT UNSIGNED DEFAULT NULL COMMENT \'The height of the image in pixels.\', INDEX bundle (bundle), INDEX user_picture_target_id (user_picture_target_id), INDEX revision_id (revision_id), PRIMARY KEY(entity_id, deleted, delta, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Data storage for user field user_picture.\' ');
        $this->addSql('CREATE TABLE users (uid INT UNSIGNED NOT NULL, uuid VARCHAR(128) NOT NULL COLLATE ascii_general_ci, langcode VARCHAR(12) NOT NULL COLLATE ascii_general_ci, UNIQUE INDEX user_field__uuid__value (uuid), PRIMARY KEY(uid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'The base table for user entities.\' ');
        $this->addSql('CREATE TABLE users_data (uid INT UNSIGNED DEFAULT 0 NOT NULL COMMENT \'The users.uid this record affects.\', module VARCHAR(50) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The name of the module declaring the variable.\', name VARCHAR(128) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'The identifier of the data.\', value LONGBLOB DEFAULT NULL COMMENT \'The value.\', serialized TINYINT(1) DEFAULT \'0\' COMMENT \'Whether value is serialized.\', INDEX name (name), INDEX module (module), PRIMARY KEY(uid, module, name)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Stores module data as key/value pairs per user.\' ');
        $this->addSql('CREATE TABLE users_field_data (uid INT UNSIGNED NOT NULL, langcode VARCHAR(12) NOT NULL COLLATE ascii_general_ci, preferred_langcode VARCHAR(12) DEFAULT NULL COLLATE ascii_general_ci, preferred_admin_langcode VARCHAR(12) DEFAULT NULL COLLATE ascii_general_ci, name VARCHAR(60) NOT NULL COLLATE utf8mb4_general_ci, pass VARCHAR(255) DEFAULT NULL COLLATE utf8mb4_general_ci, mail VARCHAR(254) DEFAULT NULL COLLATE utf8mb4_general_ci, timezone VARCHAR(32) DEFAULT NULL COLLATE utf8mb4_general_ci, status TINYINT(1) DEFAULT NULL, created INT NOT NULL, changed INT DEFAULT NULL, access INT NOT NULL, login INT DEFAULT NULL, init VARCHAR(254) DEFAULT NULL COLLATE utf8mb4_general_ci, default_langcode TINYINT(1) NOT NULL, INDEX user_field__created (created), UNIQUE INDEX user__name (name, langcode), INDEX user__id__default_langcode__langcode (uid, default_langcode, langcode), INDEX user_field__mail (mail(191)), INDEX user_field__access (access), PRIMARY KEY(uid, langcode)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'The data table for user entities.\' ');
        $this->addSql('CREATE TABLE watchdog (wid INT AUTO_INCREMENT NOT NULL COMMENT \'Primary Key: Unique watchdog event ID.\', uid INT UNSIGNED DEFAULT 0 NOT NULL COMMENT \'The users.uid of the user who triggered the event.\', type VARCHAR(64) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'Type of log message, for example "user" or "page not found."\', message LONGTEXT NOT NULL COLLATE utf8mb4_general_ci COMMENT \'Text of log message to be passed into the t() function.\', variables LONGBLOB NOT NULL COMMENT \'Serialized array of variables that match the message string and that is passed into the t() function.\', severity TINYINT(1) DEFAULT \'0\' NOT NULL COMMENT \'The severity level of the event. ranges from 0 (Emergency) to 7 (Debug)\', link TEXT DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'Link to view the result of the event.\', location TEXT NOT NULL COLLATE utf8mb4_general_ci COMMENT \'URL of the origin of the event.\', referer TEXT DEFAULT NULL COLLATE utf8mb4_general_ci COMMENT \'URL of referring page.\', hostname VARCHAR(128) DEFAULT \'\' NOT NULL COLLATE ascii_general_ci COMMENT \'Hostname of the user who triggered the event.\', timestamp INT DEFAULT 0 NOT NULL COMMENT \'Unix timestamp of when event occurred.\', INDEX uid (uid), INDEX type (type), INDEX severity (severity), PRIMARY KEY(wid)) DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE = InnoDB COMMENT = \'Table that contains logs of all system events.\' ');
        $this->addSql('ALTER TABLE intermediaire DROP last_login');
    }
}
